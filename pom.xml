<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.4.2</version>
    <relativePath></relativePath>
    <!-- lookup parent from repository -->
  </parent>

  <groupId>io.vanillabp.blueprint</groupId>
  <artifactId>workflowmodule-springboot-standalone</artifactId>
  <version>1.0.2-SNAPSHOT</version>

  <packaging>jar</packaging>
  <name>Blueprint standalone workflow module</name>
  <description>Blueprint of a standalone Spring Boot VanillaBP workflow module</description>
  <url>https://github.com/vanillabp/blueprint-workflowmodule-springboot-standalone</url>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>VanillaBP</id>
      <organization>Phactum Softwareentwicklung GmbH</organization>
      <organizationUrl>https://www.phactum.at</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/vanillabp/blueprint-workflowmodule-springboot-standalone.git</connection>
    <developerConnection>scm:git:https://github.com/vanillabp/blueprint-workflowmodule-springboot-standalone.git</developerConnection>
    <url>http://github.com/vanillabp/blueprint-workflowmodule-springboot-standalone/tree/main</url>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>17</java.version>
    <lombok.version>1.18.34</lombok.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <!-- The only compile-time dependency regarding BPMS is the VanillaBP SPI. -->
    <dependency>
      <groupId>io.vanillabp</groupId>
      <artifactId>spi-for-java</artifactId>
      <version>1.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <optional>true</optional>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>vanillabp-spring-boot-support</id>
      <url>https://maven.pkg.github.com/vanillabp/spring-boot-support</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>camunda-community-hub-vanillabp-camunda7-adapter</id>
      <url>https://maven.pkg.github.com/camunda-community-hub/vanillabp-camunda7-adapter</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>camunda-community-hub-vanillabp-camunda8-adapter</id>
      <url>https://maven.pkg.github.com/camunda-community-hub/vanillabp-camunda8-adapter</url>
    </repository>
  </repositories>
  <build>
    <finalName>loan-approval</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <release>${java.version}</release>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.44.0</version>
        <configuration>
          <pom>
            <includes>
              <include>**/pom.xml</include>
            </includes>
            <sortPom></sortPom>
          </pom>
          <markdown>
            <includes>
              <include>**/*.md</include>
            </includes>
            <excludes>
              <exclude>target/**/</exclude>
              <exclude>src/main/webapp/node_modules/**/</exclude>
            </excludes>
            <flexmark></flexmark>
          </markdown>
          <yaml>
            <includes>
              <include>**/*.yaml</include>
            </includes>
            <excludes>
              <exclude>target/**/</exclude>
              <exclude>src/main/webapp/node_modules/**/</exclude>
            </excludes>
            <jackson>
              <yamlFeatures>
                <MINIMIZE_QUOTES>true</MINIMIZE_QUOTES>
                <WRITE_DOC_START_MARKER>false</WRITE_DOC_START_MARKER>
              </yamlFeatures>
            </jackson>
            <prettier></prettier>
          </yaml>
          <typescript>
            <includes>
              <include>src/main/webapp/src/**/*.ts*</include>
              <include>src/main/webapp/development/**/*.ts*</include>
            </includes>
            <excludes>
              <exclude>target/**/</exclude>
              <exclude>src/main/webapp/node_modules/**/</exclude>
            </excludes>
            <prettier></prettier>
          </typescript>
          <java>
            <eclipse>
              <file>${maven.multiModuleProjectDirectory}/formatting_conventions.xml</file>
              <version>4.26</version>
            </eclipse>
            <removeUnusedImports></removeUnusedImports>
            <importOrder>
              <order>java,javax,org,com,at.phactum</order>
            </importOrder>
          </java>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- Choose the right Maven profile depending on the BPMS used
         to provide the respective VanillaBP SPI adapter at runtime. -->
  <profiles>
    <profile>
      <id>camunda7</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.camunda.community.vanillabp</groupId>
          <artifactId>camunda7-spring-boot-adapter</artifactId>
          <version>1.3.1</version>
        </dependency>
        <dependency>
          <groupId>com.zaxxer</groupId>
          <artifactId>HikariCP</artifactId>
          <version>5.1.0</version>
        </dependency>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>camunda8</id>
      <dependencies>
        <dependency>
          <groupId>org.camunda.community.vanillabp</groupId>
          <artifactId>camunda8-spring-boot-adapter</artifactId>
          <version>1.6.2</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
